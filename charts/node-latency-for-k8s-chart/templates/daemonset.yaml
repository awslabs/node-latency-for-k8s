apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "node-latency-for-k8s.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "node-latency-for-k8s.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "node-latency-for-k8s.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "node-latency-for-k8s.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: {{ .Values.nodeLabelKey }}
                  operator: DoesNotExist
      serviceAccountName: {{ include "node-latency-for-k8s.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if not .Values.image.digest }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- else }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.digest }}"
          {{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: 2112
          env:
            {{- if .Values.oTeLCollectorDaemonset}}
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(HOST_IP):4318
            {{- else }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "{{ .Values.env.OTEL_EXPORTER_OTLP_ENDPOINT }}"
            {{- end }}
            - name: AWS_REGION
              value: {{ .Values.region }}
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: /var/log
              readOnly: true
      volumes:
        - name: logs
          hostPath:
            path: /var/log
            type: Directory
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
